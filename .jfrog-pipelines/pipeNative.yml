resources:
  - name: dbp_repo
    type: GitRepo
    configuration:
      gitProvider: myGithub                            # <-- replace with your integration 
      path: RjSH1/jfrog-pipelines-docker-sample_1     # <-- replace with your repository name
      branches:
        include: master

  - name: dbp_image
    type: Image
    configuration:
      registry: myArtifactory                                # <-- replace with your artifactory integration
      sourceRepository: test-docker-local                  # <-- required if registry is Artifactory
      imageName: pipelines.jfrog.io/test-docker-local/dbp    # < -- replace with your image path and name
      imageTag: latest
      autoPull: true
      
  - name: dbp_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: myArtifactory                            # <-- replace with your artifactory integration
      buildName: dbp_build
      buildNumber: 1    

  - name: dbp_promoted_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: myArtifactory                             # <-- replace with your artifactory integration
      buildName: dbp_build
      buildNumber: 1
      

pipelines:
  - name: pipeline_dbp
    configuration:
      jfrogCliVersion: 2    
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: dbp_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: pipelines.jfrog.io/docker-local/dbp  # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: dbp_repo
          integrations:
            - name: myArtifactory                             # <-- replace with your artifactory integration
        execution:
          onStart:
              # - msg="Run description updated from step $step_id"
              - update_run_description "DockerBuild native step performs a build to produce a Docker image from a Dockerfile in a GitRepo  source repository resource."             

      - name: local_step
        type: Bash
        configuration:
          integrations:
            - name: {{.jfrog-pipelines.localArtifactory}}
          inputSteps:
            - name: docker_build            
        execution:
          onExecute:
            - echo "first_step"
            - jfrog config add jftest-$step_id --url https://pipelines.jfrog.io --access-token ${JFROG_LOCAL_ARTIFACTORY_TOKEN}
            - touch test.txt
            - echo "hello" > test.txt
            - jfrog rt upload test.txt demo-sampleRepo/test.txt --server-id jftest-$step_id
